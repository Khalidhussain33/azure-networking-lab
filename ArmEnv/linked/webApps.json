{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "secondaryLocation": "francecentral"
    },
    "resources": [
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Web/serverfarms",
            "kind": "app",
            "name": "[concat(parameters('namePrefix'), 'serviceplan-region1')]",
            "location": "[variables('location')]",
            "properties": {
            },
            "dependsOn": [
            ],
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            }
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Web/serverfarms",
            "kind": "app",
            "name": "[concat(parameters('namePrefix'), 'serviceplan-region2')]",
            "location": "[variables('secondaryLocation')]",
            "properties": {
            },
            "dependsOn": [
            ],
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            }
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[concat(parameters('namePrefix'), '-globalwebregion1')]",
            "location": "[variables('location')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(parameters('namePrefix'), 'serviceplan-region1'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', concat(parameters('namePrefix'), 'serviceplan-region1'))]"
            ],
            "resources": [
                {
                    "name": "virtualNetwork",
                    "type": "config",
                    "apiVersion": "2018-02-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(parameters('namePrefix'), '-globalwebregion1')]"
                    ],
                    "properties": {
                        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('namePrefix'), '-spoke2-net'), 'paas-integration-sub')]",
                        "swiftSupported": true
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[concat(parameters('namePrefix'), '-globalwebregion2')]",
            "location": "[variables('secondaryLocation')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(parameters('namePrefix'), 'serviceplan-region2'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', concat(parameters('namePrefix'), 'serviceplan-region2'))]"
            ]
        },
        {
            "type": "Microsoft.Network/frontDoorWebApplicationFirewallPolicies",
            "name": "myWafPolicy",
            "apiVersion": "2019-10-01",
            "location": "[variables('location')]",
            "tags": {},
            "properties": {
                "policySettings": {
                    "enabledState": "Enabled",
                    "mode": "Prevention",
                    "redirectUrl": null,
                    "customBlockResponseStatusCode": 403,
                    "customBlockResponseBody": null
                },
                "customRules": {
                    "rules": [
                        {
                            "name": "rateLimitFromCZ",
                            "priority": 100,
                            "enabledState": "Enabled",
                            "ruleType": "RateLimitRule",
                            "rateLimitDurationInMinutes": 1,
                            "rateLimitThreshold": 5,
                            "matchConditions": [
                                {
                                    "matchVariable": "RemoteAddr",
                                    "selector": null,
                                    "operator": "GeoMatch",
                                    "negateCondition": false,
                                    "matchValue": [
                                        "CZ"
                                    ],
                                    "transforms": []
                                }
                            ],
                            "action": "Block"
                        }
                    ]
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "DefaultRuleSet",
                            "ruleSetVersion": "1.0",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        },
                        {
                            "ruleSetType": "Microsoft_BotManagerRuleSet",
                            "ruleSetVersion": "1.0",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/frontdoors",
            "name": "[concat(parameters('namePrefix'), '-globalniweb')]",
            "apiVersion": "2020-01-01",
            "dependsOn": [
                "myWafPolicy"
            ],
            "location": "global",
            "properties": {
                "friendlyName": "[concat(parameters('namePrefix'), '-globalniweb')]",
                "enabledState": "Enabled",
                "healthProbeSettings": [
                    {
                        "name": "globalWebProbe",
                        "properties": {
                            "path": "/",
                            "protocol": "Https",
                            "intervalInSeconds": 30,
                            "healthProbeMethod": "Head",
                            "enabledState": "Enabled"
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "globalWebLb",
                        "properties": {
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "additionalLatencyMilliseconds": 0
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "name": "[concat(parameters('namePrefix'), '-globalniweb-azurefd-net')]",
                        "properties": {
                            "hostName": "[concat(parameters('namePrefix'), '-globalniweb.azurefd.net')]",
                            "sessionAffinityEnabledState": "Enabled",
                            "sessionAffinityTtlSeconds": 0,
                            "webApplicationFirewallPolicyLink": {
                                "id": "[resourceId('Microsoft.Network/frontDoorWebApplicationFirewallPolicies', 'myWafPolicy')]"
                            }
                        }
                    }
                ],
                "backendPools": [
                    {
                        "name": "globalWebBackend",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[concat(parameters('namePrefix'), '-globalwebregion1.azurewebsites.net')]",
                                    "enabledState": "Enabled",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "[concat(parameters('namePrefix'),'-globalwebregion1.azurewebsites.net')]"
                                },
                                {
                                    "address": "[concat(parameters('namePrefix'),'-globalwebregion2.azurewebsites.net')]",
                                    "enabledState": "Enabled",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "[concat(parameters('namePrefix'),'-globalwebregion2.azurewebsites.net')]"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontdoors/loadBalancingSettings/', concat(parameters('namePrefix'), '-globalniweb'), 'globalWebLb')]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontdoors/healthProbeSettings/', concat(parameters('namePrefix'), '-globalniweb'), 'globalWebProbe')]"
                            }
                        }
                    }
                ],
                "routingRules": [
                    {
                        "name": "globalWebRule",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontdoors/frontendEndpoints/', concat(parameters('namePrefix'), '-globalniweb'), concat(parameters('namePrefix'), '-globalniweb-azurefd-net'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "MatchRequest",
                                "cacheConfiguration": {
                                    "queryParameterStripDirective": "StripNone",
                                    "dynamicCompression": "Enabled",
                                    "queryParameters": null,
                                    "cacheDuration": "P0Y0M0DT0H5M0S"
                                },
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontdoors/backendPools/', concat(parameters('namePrefix'), '-globalniweb'), 'globalWebBackend')]"
                                }
                            }
                        }
                    }
                ]
            }
        }
    ]
}